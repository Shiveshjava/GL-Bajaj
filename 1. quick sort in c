#include <stdio.h>

void quicksort(int arr[], int si, int ei);
int partition(int arr[], int si, int ei);

int main() {
    int arr[] = { 7, 6, 5, 4, 3, 2, 1 };
    int n = sizeof(arr) / sizeof(arr[0]);
    quicksort(arr, 0, n - 1);
    
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    return 0; 
}

void quicksort(int arr[], int si, int ei) {
    if (si >= ei) {
        return;
    }
    
    int pivot = partition(arr, si, ei);
    quicksort(arr, si, pivot - 1);
    quicksort(arr, pivot + 1, ei);
}

int partition(int arr[], int si, int ei) {
    int item = arr[ei];
    int idx = si;
    for (int i = si; i < ei; i++) {
        if (arr[i] < item) {
            int temp = arr[i];
            arr[i] = arr[idx];
            arr[idx] = temp;
            idx++;
        }
    }
    int temp = arr[idx];
    arr[idx] = arr[ei];
    arr[ei] = temp;
    return idx;
}

